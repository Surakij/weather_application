{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://weather_application/./src/apiGeo.js","webpack://weather_application/./src/appCityTempIconSection.js","webpack://weather_application/./src/apiWeather.js","webpack://weather_application/./src/appMapDiv.js","webpack://weather_application/./src/helper.js","webpack://weather_application/./src/appInputListForm.js","webpack://weather_application/./src/index.js"],"sourcesContent":["export async function getCity() {\n    const response = await fetch('https://get.geojs.io/v1/ip/geo.json');\n    return await response.json();\n}","\nexport function createCityWeatherSection(location, weather) {\n\n\n    const CitTempAndIconContainer = document.createElement('section');\n    const cityName = document.createElement('h1');\n    const iconWeather = document.createElement('img');\n    const tempUnit = document.createElement('span');\n\n\n    CitTempAndIconContainer.classList.add('city_temp_icon_container');\n    tempUnit.classList.add('temp');\n    iconWeather.classList.add('weather_icon');\n\n    cityName.textContent = location.city;\n    tempUnit.textContent = Math.floor(+weather.main.temp) - 273;\n    iconWeather.src = `https://openweathermap.org/img/w/${weather.weather[0].icon}.png`;\n\n\n    CitTempAndIconContainer.append(cityName, tempUnit, iconWeather);\n\n\nreturn CitTempAndIconContainer;\n}\n\n","export async function getWeatherData(city) {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=ff6f06036194f66a3ce510a3e0bb0c28`);\n    const result = await response.json();\n    console.log(result);\n    return result;\n}\n\n\n\n","export function getMap(location) {\n    const divMap = document.createElement('div');\n    const scriptMap = document.createElement('script');\n\n    divMap.id = 'map';\n    document.head.appendChild(scriptMap);\n\n    scriptMap.async = true;\n    scriptMap.defer = true;\n    scriptMap.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCDjr2xBpii4hZzyM7erXc_MPO9_mufqaE&callback=initMap';\n\n\n    window.initMap = function () {\n        const map = new google.maps.Map(document.getElementById('map'), {\n            center: {lat: +location.latitude, lng: +location.longitude},\n            zoom: 10\n        });\n    };\n\n    return divMap;\n}","import {createCityWeatherSection} from \"./appCityTempIconSection.js\";\nimport {createForm} from \"./appInputListForm.js\";\nimport {getMap} from \"./appMapDiv.js\";\n\nexport function resetWeatherContent(city, weather) {\n    console.log(city);\n    // localStorage.setItem('city', JSON.stringify(location));\n    document.body.innerHTML = '';\n    const sectionWeather = createCityWeatherSection(city, weather);\n    const form = createForm();\n    const map = getMap(city);\n    document.body.append(sectionWeather, form, map)\n}","import {getWeatherData} from \"./apiWeather.js\";\nimport {resetWeatherContent} from \"./helper\";\n\nexport function createForm() {\n\n    const searchContainer = document.createElement('form');\n    const input = document.createElement('input');\n    const button = document.createElement(\"button\");\n    const searchList = document.createElement('ul');\n\n    searchContainer.classList.add('search_container');\n    input.classList.add('input');\n    searchList.classList.add('search_list');\n\n    input.type = 'text';\n    input.placeholder = 'city name';\n    button.textContent = \"Click me\";\n\n    searchContainer.append(input, button);\n\n\n    button.addEventListener('click', async () => {\n        if (!input.value) {\n            return;\n        }\n\n        const newWeather = await getWeatherData(input.value);\n        resetWeatherContent(newWeather.name, newWeather);\n    }, () => {\n        if (searchList.querySelectorAll(\"li\").length > 10){\n            searchList.firstElementChild.remove();\n        }\n        let text = input.value;\n        let searchListUnit = document.createElement('li');\n        searchListUnit.innerText = text;\n        searchList.append(searchListUnit);\n        input.value = '';\n    });\n\n    return searchContainer;\n}","import \"../css/style.css\";\nimport {getCity} from \"./apiGeo.js\"\nimport {createCityWeatherSection} from \"./appCityTempIconSection.js\";\nimport {getWeatherData} from \"./apiWeather.js\";\nimport {getMap} from \"./appMapDiv.js\";\nimport {createForm} from \"./appInputListForm.js\";\n\n\nconst app = async () => {\n\n    const locationData = await getCity();\n    const weatherData = await getWeatherData(locationData.city);\n    const sectionWeather = createCityWeatherSection(locationData, weatherData);\n    const map = getMap(locationData);\n    const form = createForm();\n\n    document.body.append(sectionWeather, form, map)\n\n\n}\n\napp();\n\n"],"names":["getCity","fetch","response","json","createCityWeatherSection","location","weather","CitTempAndIconContainer","document","createElement","cityName","iconWeather","tempUnit","classList","add","textContent","city","Math","floor","main","temp","src","icon","append","getWeatherData","result","console","log","getMap","divMap","scriptMap","id","head","appendChild","async","defer","window","initMap","google","maps","Map","getElementById","center","lat","latitude","lng","longitude","zoom","resetWeatherContent","body","innerHTML","sectionWeather","form","createForm","map","i","searchContainer","input","button","searchList","type","placeholder","addEventListener","value","newWeather","name","querySelectorAll","length","firstElementChild","remove","text","searchListUnit","innerText","app","locationData","weatherData"],"sourceRoot":""}