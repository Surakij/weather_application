{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://weather_application/./src/apiGeo.js","webpack://weather_application/./src/addSection.js","webpack://weather_application/./src/apiWeather.js","webpack://weather_application/./src/addMap.js","webpack://weather_application/./src/helper.js","webpack://weather_application/./src/addForm.js","webpack://weather_application/./src/index.js"],"sourcesContent":["export async function getCity() {\n    try {\n        const response = await fetch('https://get.geojs.io/v1/ip/geo.json');\n        const data = await response.json();\n        return data.city;\n    } catch (error) {\n        return null;\n    }\n}","export function createCityWeatherSection(city, temp, icon) {\n\n\n    const CitTempAndIconContainer = document.createElement('section');\n    const cityName = document.createElement('h1');\n    const iconWeather = document.createElement('img');\n    const tempUnit = document.createElement('span');\n\n\n    CitTempAndIconContainer.id = 'weather_cont';\n    tempUnit.classList.add('temp');\n    iconWeather.classList.add('weather_icon');\n\n    cityName.textContent = city;\n    tempUnit.textContent = temp;\n    iconWeather.src = icon;\n\n\n    CitTempAndIconContainer.append(cityName, iconWeather, tempUnit);\n\n\nreturn CitTempAndIconContainer;\n}\n\n","export async function getWeatherData(city) {\n    try {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=ff6f06036194f66a3ce510a3e0bb0c28`);\n        let data = await response.json();\n        let temp = Math.floor(data.main.temp) - 273;\n        let icon = `https://openweathermap.org/img/w/${data.weather[0].icon}.png`;\n        return [temp, icon];\n    } catch (error) {\n        return null;\n    }\n}\n\n\n\n","\nexport function getMap(city) {\n    let mapEl = document.getElementById('map');\n    if (!mapEl) {\n        mapEl = document.createElement('div');\n        mapEl.setAttribute('id', 'map');\n        document.body.append(mapEl);\n    }\n\n    mapEl.textContent = '';\n    if (window.mapInit) {\n        window.mapInit('map', city);\n    }\n}","import {createCityWeatherSection} from \"./addSection.js\";\nimport {getMap} from \"./addMap.js\";\n\n\nexport function resetWeatherContent(city, temp, icon) {\n\n\n    document.getElementById('map').remove();\n    document.getElementById('weather_cont').remove();\n\n    document.body.prepend(createCityWeatherSection(city, temp, icon));\n    getMap(city);\n\n}\n\n","import {getWeatherData} from \"./apiWeather.js\";\nimport {resetWeatherContent} from \"./helper\";\n\n\n/**\n * @param {string} list\n */\n\nexport function createForm(list) {\n\n    const searchContainer = document.createElement('form');\n    const input = document.createElement('input');\n    const button = document.createElement(\"button\");\n    const searchList = document.createElement('ul');\n\n\n    searchContainer.id = 'search_container';\n    input.classList.add('input');\n    searchList.id = 'search_list';\n\n    input.type = 'text';\n    input.placeholder = 'city name';\n    button.textContent = \"Click me\";\n    button.type = 'submit';\n\n    if (list) {\n        searchList.innerHTML = list;\n        cityReloadByClick();\n\n    }\n\n    searchContainer.append(input, button, searchList);\n\n    button.addEventListener('click', reloadPage);\n\n    async function reloadPage(e) {\n        e.preventDefault();\n        if (!input.value || input.value.trim() === '' || !isNaN(Number(input.value))) {\n            alert('Please enter a city');\n            input.value = '';\n            return;\n        }\n        try {\n            const weatherArr = await getWeatherData(input.value);\n            let temp = weatherArr[0], icon = weatherArr[1];\n            resetWeatherContent(input.value, temp, icon);\n            addList();\n        } catch (error) {\n            alert('Please try again');\n            input.value = '';\n        }\n    }\n\n    function addList() {\n        if (searchList.querySelectorAll(\"li\").length > 9) {\n            searchList.firstElementChild.remove();\n        }\n        const searchListUnit = document.createElement('li');\n        searchListUnit.innerText = input.value;\n        searchList.append(searchListUnit);\n        input.value = '';\n\n        localStorage.setItem('cityList', searchList.innerHTML);\n\n        cityReloadByClick();\n    }\n\n    function cityReloadByClick() {\n        searchList.querySelectorAll('li').forEach((item) => {\n            item.addEventListener('click', async () => {\n                const newWeather = await getWeatherData(item.innerText);\n                let temp = newWeather[0], icon = newWeather[1];\n                resetWeatherContent(item.innerText, temp, icon);\n            })\n        })\n    }\n    return searchContainer;\n}","import \"../css/style.css\";\nimport {getCity} from \"./apiGeo.js\"\nimport {createCityWeatherSection} from \"./addSection.js\";\nimport {getWeatherData} from \"./apiWeather.js\";\nimport {getMap} from \"./addMap.js\";\nimport {createForm} from \"./addForm.js\";\n\n\n\nconst app = async list => {\n\n    let form;\n    if (localStorage.cityList) {\n        let list = localStorage.getItem('cityList');\n        form = createForm(list);\n    } else {\n        form = createForm(list);\n    }\n\n    const city = await getCity();\n    const weatherArr = await getWeatherData(city);\n    let temp = weatherArr[0];\n    let icon = weatherArr[1];\n\n    const sectionWeather = createCityWeatherSection(city,temp, icon);\n    getMap(city);\n\n\n    document.body.prepend(sectionWeather, form);\n\n\n\n}\n\napp();\n\n"],"names":["getCity","fetch","response","json","data","city","createCityWeatherSection","temp","icon","CitTempAndIconContainer","document","createElement","cityName","iconWeather","tempUnit","id","classList","add","textContent","src","append","getWeatherData","Math","floor","main","weather","getMap","mapEl","getElementById","setAttribute","body","window","mapInit","resetWeatherContent","remove","prepend","i","createForm","list","searchContainer","input","button","searchList","e","preventDefault","value","trim","isNaN","Number","alert","weatherArr","addList","querySelectorAll","length","firstElementChild","searchListUnit","innerText","localStorage","setItem","innerHTML","cityReloadByClick","forEach","item","addEventListener","newWeather","type","placeholder","app","cityList","getItem","form","sectionWeather"],"sourceRoot":""}