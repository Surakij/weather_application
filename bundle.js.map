{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://weather_application/./src/apiGeo.js","webpack://weather_application/./src/appCityTempIconSection.js","webpack://weather_application/./src/apiWeather.js","webpack://weather_application/./src/appMapDiv.js","webpack://weather_application/./src/helper.js","webpack://weather_application/./src/appInputListForm.js","webpack://weather_application/./src/index.js"],"sourcesContent":["export async function getCity() {\n    const response = await fetch('https://get.geojs.io/v1/ip/geo.json');\n    return await response.json();\n}","\nexport function createCityWeatherSection(city, weather) {\n\n\n    const CitTempAndIconContainer = document.createElement('section');\n    const cityName = document.createElement('h1');\n    const iconWeather = document.createElement('img');\n    const tempUnit = document.createElement('span');\n\n\n    CitTempAndIconContainer.id = 'weather_cont';\n    tempUnit.classList.add('temp');\n    iconWeather.classList.add('weather_icon');\n\n    cityName.textContent = city;\n    tempUnit.textContent = Math.floor(+weather.main.temp) - 273;\n    iconWeather.src = `https://openweathermap.org/img/w/${weather.weather[0].icon}.png`;\n\n\n    CitTempAndIconContainer.append(cityName, iconWeather, tempUnit);\n\n\nreturn CitTempAndIconContainer;\n}\n\n","export async function getWeatherData(city) {\n    try {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=ff6f06036194f66a3ce510a3e0bb0c28`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\n\n","\nexport function getMap(city) {\n    let mapEl = document.getElementById('map');\n    if (!mapEl) {\n        mapEl = document.createElement('div');\n        mapEl.setAttribute('id', 'map');\n        document.body.append(mapEl);\n    }\n\n    mapEl.textContent = '';\n    if (window.mapInit) {\n        window.mapInit('map', city);\n    }\n}","import {createCityWeatherSection} from \"./appCityTempIconSection.js\";\nimport {getMap} from \"./appMapDiv.js\";\n\n\nexport function resetWeatherContent(city, weather) {\n\n\n    document.getElementById('map').remove();\n    document.getElementById('weather_cont').remove();\n\n    document.body.prepend(createCityWeatherSection(city, weather));\n    getMap(city);\n\n}\n\n","import {getWeatherData} from \"./apiWeather.js\";\nimport {resetWeatherContent} from \"./helper\";\n\nexport function createForm(list) {\n\n    const searchContainer = document.createElement('form');\n    const input = document.createElement('input');\n    const button = document.createElement(\"button\");\n    const searchList = document.createElement('ul');\n\n\n    searchContainer.id = 'search_container';\n    input.classList.add('input');\n    searchList.id = 'search_list';\n\n    input.type = 'text';\n    input.placeholder = 'city name';\n    button.textContent = \"Click me\";\n    button.type = 'submit';\n\n    if (list) {\n        searchList.innerHTML = list;\n        cityReloadByClick();\n\n    }\n\n    searchContainer.append(input, button, searchList);\n\n    button.addEventListener('click', reloadPage);\n\n    let error;\n\n    async function reloadPage(e) {\n        e.preventDefault();\n        if (!input.value || input.value.trim() === '' || !isNaN(Number(input.value))) {\n            alert('Please enter a city');\n            input.value = '';\n            return;\n        }\n        try {\n            const weatherData = await getWeatherData(input.value);\n            if (weatherData.message) {\n                alert(weatherData.message);\n                input.value = '';\n                error = weatherData.message;\n\n            } else {\n                resetWeatherContent(weatherData.name, weatherData);\n                console.log(error);\n                addList();\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    function addList() {\n        if (searchList.querySelectorAll(\"li\").length > 9) {\n            searchList.firstElementChild.remove();\n        } else if (!input.value || input.value.trim() === '' || !isNaN(Number(input.value))) {\n            return;\n        }\n        const searchListUnit = document.createElement('li');\n        searchListUnit.innerText = input.value;\n        searchList.append(searchListUnit);\n        input.value = '';\n\n        localStorage.setItem('cityList', searchList.innerHTML);\n\n        cityReloadByClick();\n\n\n    }\n\n    function cityReloadByClick() {\n        searchList.querySelectorAll('li').forEach((item) => {\n            item.addEventListener('click', async () => {\n                try {\n                    const newWeather = await getWeatherData(item.innerText);\n                    if (newWeather.message) {\n                        alert(newWeather.message);\n                        return;\n                    }\n                    resetWeatherContent(newWeather.name, newWeather);\n                } catch (error) {\n                    console.log(error)\n                }\n\n            })\n        })\n    }\n\n    return searchContainer;\n}","import \"../css/style.css\";\nimport {getCity} from \"./apiGeo.js\"\nimport {createCityWeatherSection} from \"./appCityTempIconSection.js\";\nimport {getWeatherData} from \"./apiWeather.js\";\nimport {getMap} from \"./appMapDiv.js\";\nimport {createForm} from \"./appInputListForm.js\";\n\n\n\nconst app = async () => {\n\n    let form;\n    if (localStorage.cityList) {\n        let list = localStorage.getItem('cityList');\n        form = createForm(list);\n    } else {\n        form = createForm();\n    }\n\n    const locationData = await getCity();\n    const weatherData = await getWeatherData(locationData.city);\n    const sectionWeather = createCityWeatherSection(locationData.city, weatherData);\n    getMap(locationData.city);\n\n\n    document.body.prepend(sectionWeather, form);\n\n\n\n}\n\napp();\n\n"],"names":["getCity","fetch","response","json","createCityWeatherSection","city","weather","CitTempAndIconContainer","document","createElement","cityName","iconWeather","tempUnit","id","classList","add","textContent","Math","floor","main","temp","src","icon","append","getWeatherData","console","error","getMap","mapEl","getElementById","setAttribute","body","window","mapInit","resetWeatherContent","remove","prepend","i","createForm","list","searchContainer","input","button","searchList","e","preventDefault","value","trim","isNaN","Number","alert","weatherData","message","name","log","addList","querySelectorAll","length","firstElementChild","searchListUnit","innerText","localStorage","setItem","innerHTML","cityReloadByClick","forEach","item","addEventListener","newWeather","type","placeholder","app","cityList","getItem","form","locationData","sectionWeather"],"sourceRoot":""}